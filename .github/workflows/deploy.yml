name: Build & Deploy → EKS

permissions:
  id-token: write     # ← allows aws-actions/configure-aws-credentials to fetch the JWT :contentReference[oaicite:0]{index=0}
  contents: read      # ← lets you check out your code

on:
  push:
    branches: [ main ]

env:
  IMAGE_URI: ${{ secrets.ECR_REGISTRY }}:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region:     ${{ secrets.AWS_REGION }}

      - name: Log in to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & push image
        run: |
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region:     ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'    # or pin to e.g. 'v1.28.0'

      - name: Update kubeconfig
        env:
          AWS_REGION:        ${{ secrets.AWS_REGION }}
          EKS_CLUSTER_NAME:  ${{ secrets.EKS_CLUSTER_NAME }}
        run: |
          aws eks update-kubeconfig \
            --region ${AWS_REGION} \
            --name   ${EKS_CLUSTER_NAME}
  
      - name: Deploy to EKS
        env:
          IMAGE_URI: ${{ steps.build.outputs.IMAGE_URI }}
        run: |
          # substitute the built image URI into your Deployment
          sed -i "s|REPLACE_WITH_IMAGE_URI|${IMAGE_URI}|g" k8s/deployment.yaml

          # apply without client-side validation (avoids the openapi fetch error)
          kubectl apply -f k8s/ --validate=false

          # wait for the rollout to finish
          kubectl rollout status deployment/dixit-test-app \
            --namespace default