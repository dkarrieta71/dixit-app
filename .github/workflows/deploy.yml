name: Build & Deploy → EKS

permissions:
  id-token: write     # ← allows aws-actions/configure-aws-credentials to fetch the JWT :contentReference[oaicite:0]{index=0}
  contents: read      # ← lets you check out your code

on:
  push:
    branches: [ main ]

env:
  IMAGE_URI: ${{ secrets.ECR_REGISTRY }}:${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region:     ${{ secrets.AWS_REGION }}

      - name: Log in to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build & push image
        run: |
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS via OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region:     ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'    # or pin to e.g. 'v1.28.0'

      - name: Update kubeconfig
        env:
          AWS_REGION:        ${{ secrets.AWS_REGION }}
          EKS_CLUSTER_NAME:  ${{ secrets.EKS_CLUSTER_NAME }}
        run: |
          aws eks update-kubeconfig \
            --region ${AWS_REGION} \
            --name   ${EKS_CLUSTER_NAME}
  
      - name: Verify kubeconfig & manifest
        run: |
          # 1. Check that kubectl is pointing at the right context
          kubectl config current-context

          # 2. Confirm you can reach the API server
          kubectl cluster-info

          # 3. Dry-run your Deployment and Service YAML to validate syntax & schema
          kubectl apply -f k8s/deployment.yaml --dry-run=client --validate=true
          kubectl apply -f k8s/service.yaml    --dry-run=client --validate=true